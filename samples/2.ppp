
class Foo extends Bar

  const SOME_CONST = 'foo'

  static $static_property = 5

  static $multi_line_array = [
      'foo',
      'bar',
      'baz',
      'barf',
    ]

  static $multi_2d_array = {
    'foo' : {
        'bar': 'baz'
    }
  }

  static $crazy_json_obj = {
    "foo" : { "bar" : "baz" },
    "barf" : { 
      "magic" : [1, 2, 3]
    }
  }

  static $three_deep = {
    "foo" : {
       "bar": {
         'hello'
       }
    }
  }

  static $one_d_json_object = {
    "foo" : 124
  }

  def __construct()
    @name = 'russ'

  private def doSomething()
    @has @nested "function calls!", 12.4
    $var = 'single quoted string'
    $var.supports.dotNotation = "also"."supports".'string'.$concatenation

    $name = func @@SOME_CONST
    $name = func @@$static_property

    $array_style_one = ['list', 'of', 4, $things]
    $nested_arrays = ['stuff', $with, ['stuff': $between]]
    $arrays = ['name' : 'russ', 'phone_number' : '1800flowers']
    $arrays[$foo] = 'bar'
    $var.supports $dotNotation, 'for functions!'
    <- $x < $y ? yes : no

  def someMethodThatThrows()
    try
      @funcWithArg 42
    catch ORM_Exception $e
      Logger::log $e.getMessage()
      throw $e
    catch UnexecptedArgumentException $e
        <- 42

  def funcWithArg($x = 23)
    $do = ($foo > 'barf') ? true : false

    $barf = new BarfMachine 'test'
    $barf.turnMachine off

    if @variable 'return value', $x
        <- 24
    elif 23 + 34 > 12
        <- 12
    else
        <- 6

